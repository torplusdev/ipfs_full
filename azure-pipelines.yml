# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- pp_master

strategy:
  matrix: 
    linux:
      poolName: 'Ubuntu_Pool'
      vmImage:
      osName: 'linux'
      ext: ''
      addldflags: ''
    windows:
      poolName: 'Windows_Pool'
      vmImage:
      osName: 'windows'
      ext: ".exe"
      addldflags: '-ldflags -H=windowsgui'
    mac:
      poolName: 'Azure Pipelines'
      vmImage: 'macOS-10.14'
      osName: 'mac'
      ext: ''
      addldflags: ''

pool:
  name: $(poolName)
  vmImage: $(vmImage)

steps:
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: 'key_entry'
    #sshPublicKey: $(public_key)
    sshKeySecureFile: 'key'
  displayName: "Create SSH files"

- checkout: self 
  clean: true
  submodules: recursive
  displayName: 'Fetching all the changes'

- script: |
    go build -v $(addldflags)
  workingDirectory: $(Build.SourcesDirectory)/go-ipfs/cmd/ipfs
  displayName: 'Building Go Ipfs'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/go-ipfs/cmd/ipfs/ipfs$(ext)'
    includeRootFolder: true
    archiveType: '7z'
    sevenZipCompression: 'ultra'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ipfs-$(osName)-$(Build.BuildId).7z'
    replaceExistingArchive: true
    verbose: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/go-ipfs/cmd/ipfs/ipfs$(ext)'
    includeRootFolder: true
    archiveType: '7z'
    sevenZipCompression: 'ultra'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ipfs-$(osName)-latest.7z'
    replaceExistingArchive: true
    verbose: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'ipfs'
    publishLocation: 'Container'